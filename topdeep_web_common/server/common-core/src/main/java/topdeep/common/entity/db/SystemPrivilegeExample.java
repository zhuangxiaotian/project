package topdeep.common.entity.db;

import common.entity.Page;
import java.util.ArrayList;
import java.util.List;

public class SystemPrivilegeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_system_privilege
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_system_privilege
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_system_privilege
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_system_privilege
     *
     * @mbggenerated
     */
    protected Page page;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_system_privilege
     *
     * @mbggenerated
     */
    public SystemPrivilegeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_system_privilege
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_system_privilege
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_system_privilege
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_system_privilege
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_system_privilege
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_system_privilege
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_system_privilege
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_system_privilege
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_system_privilege
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_system_privilege
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_system_privilege
     *
     * @mbggenerated
     */
    public void setPage(Page page) {
        this.page=page;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_system_privilege
     *
     * @mbggenerated
     */
    public Page getPage() {
        return page;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_system_privilege
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andFuncPrivilegeIsNull() {
            addCriterion("FUNC_PRIVILEGE is null");
            return (Criteria) this;
        }

        public Criteria andFuncPrivilegeIsNotNull() {
            addCriterion("FUNC_PRIVILEGE is not null");
            return (Criteria) this;
        }

        public Criteria andFuncPrivilegeEqualTo(Integer value) {
            addCriterion("FUNC_PRIVILEGE =", value, "funcPrivilege");
            return (Criteria) this;
        }

        public Criteria andFuncPrivilegeNotEqualTo(Integer value) {
            addCriterion("FUNC_PRIVILEGE <>", value, "funcPrivilege");
            return (Criteria) this;
        }

        public Criteria andFuncPrivilegeGreaterThan(Integer value) {
            addCriterion("FUNC_PRIVILEGE >", value, "funcPrivilege");
            return (Criteria) this;
        }

        public Criteria andFuncPrivilegeGreaterThanOrEqualTo(Integer value) {
            addCriterion("FUNC_PRIVILEGE >=", value, "funcPrivilege");
            return (Criteria) this;
        }

        public Criteria andFuncPrivilegeLessThan(Integer value) {
            addCriterion("FUNC_PRIVILEGE <", value, "funcPrivilege");
            return (Criteria) this;
        }

        public Criteria andFuncPrivilegeLessThanOrEqualTo(Integer value) {
            addCriterion("FUNC_PRIVILEGE <=", value, "funcPrivilege");
            return (Criteria) this;
        }

        public Criteria andFuncPrivilegeIn(List<Integer> values) {
            addCriterion("FUNC_PRIVILEGE in", values, "funcPrivilege");
            return (Criteria) this;
        }

        public Criteria andFuncPrivilegeNotIn(List<Integer> values) {
            addCriterion("FUNC_PRIVILEGE not in", values, "funcPrivilege");
            return (Criteria) this;
        }

        public Criteria andFuncPrivilegeBetween(Integer value1, Integer value2) {
            addCriterion("FUNC_PRIVILEGE between", value1, value2, "funcPrivilege");
            return (Criteria) this;
        }

        public Criteria andFuncPrivilegeNotBetween(Integer value1, Integer value2) {
            addCriterion("FUNC_PRIVILEGE not between", value1, value2, "funcPrivilege");
            return (Criteria) this;
        }

        public Criteria andFuncOperateIsNull() {
            addCriterion("FUNC_OPERATE is null");
            return (Criteria) this;
        }

        public Criteria andFuncOperateIsNotNull() {
            addCriterion("FUNC_OPERATE is not null");
            return (Criteria) this;
        }

        public Criteria andFuncOperateEqualTo(Integer value) {
            addCriterion("FUNC_OPERATE =", value, "funcOperate");
            return (Criteria) this;
        }

        public Criteria andFuncOperateNotEqualTo(Integer value) {
            addCriterion("FUNC_OPERATE <>", value, "funcOperate");
            return (Criteria) this;
        }

        public Criteria andFuncOperateGreaterThan(Integer value) {
            addCriterion("FUNC_OPERATE >", value, "funcOperate");
            return (Criteria) this;
        }

        public Criteria andFuncOperateGreaterThanOrEqualTo(Integer value) {
            addCriterion("FUNC_OPERATE >=", value, "funcOperate");
            return (Criteria) this;
        }

        public Criteria andFuncOperateLessThan(Integer value) {
            addCriterion("FUNC_OPERATE <", value, "funcOperate");
            return (Criteria) this;
        }

        public Criteria andFuncOperateLessThanOrEqualTo(Integer value) {
            addCriterion("FUNC_OPERATE <=", value, "funcOperate");
            return (Criteria) this;
        }

        public Criteria andFuncOperateIn(List<Integer> values) {
            addCriterion("FUNC_OPERATE in", values, "funcOperate");
            return (Criteria) this;
        }

        public Criteria andFuncOperateNotIn(List<Integer> values) {
            addCriterion("FUNC_OPERATE not in", values, "funcOperate");
            return (Criteria) this;
        }

        public Criteria andFuncOperateBetween(Integer value1, Integer value2) {
            addCriterion("FUNC_OPERATE between", value1, value2, "funcOperate");
            return (Criteria) this;
        }

        public Criteria andFuncOperateNotBetween(Integer value1, Integer value2) {
            addCriterion("FUNC_OPERATE not between", value1, value2, "funcOperate");
            return (Criteria) this;
        }

        public Criteria andFuncNameIsNull() {
            addCriterion("FUNC_NAME is null");
            return (Criteria) this;
        }

        public Criteria andFuncNameIsNotNull() {
            addCriterion("FUNC_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andFuncNameEqualTo(String value) {
            addCriterion("FUNC_NAME =", value, "funcName");
            return (Criteria) this;
        }

        public Criteria andFuncNameNotEqualTo(String value) {
            addCriterion("FUNC_NAME <>", value, "funcName");
            return (Criteria) this;
        }

        public Criteria andFuncNameGreaterThan(String value) {
            addCriterion("FUNC_NAME >", value, "funcName");
            return (Criteria) this;
        }

        public Criteria andFuncNameGreaterThanOrEqualTo(String value) {
            addCriterion("FUNC_NAME >=", value, "funcName");
            return (Criteria) this;
        }

        public Criteria andFuncNameLessThan(String value) {
            addCriterion("FUNC_NAME <", value, "funcName");
            return (Criteria) this;
        }

        public Criteria andFuncNameLessThanOrEqualTo(String value) {
            addCriterion("FUNC_NAME <=", value, "funcName");
            return (Criteria) this;
        }

        public Criteria andFuncNameLike(String value) {
            addCriterion("FUNC_NAME like", value, "funcName");
            return (Criteria) this;
        }

        public Criteria andFuncNameNotLike(String value) {
            addCriterion("FUNC_NAME not like", value, "funcName");
            return (Criteria) this;
        }

        public Criteria andFuncNameIn(List<String> values) {
            addCriterion("FUNC_NAME in", values, "funcName");
            return (Criteria) this;
        }

        public Criteria andFuncNameNotIn(List<String> values) {
            addCriterion("FUNC_NAME not in", values, "funcName");
            return (Criteria) this;
        }

        public Criteria andFuncNameBetween(String value1, String value2) {
            addCriterion("FUNC_NAME between", value1, value2, "funcName");
            return (Criteria) this;
        }

        public Criteria andFuncNameNotBetween(String value1, String value2) {
            addCriterion("FUNC_NAME not between", value1, value2, "funcName");
            return (Criteria) this;
        }

        public Criteria andFuncParentIsNull() {
            addCriterion("FUNC_PARENT is null");
            return (Criteria) this;
        }

        public Criteria andFuncParentIsNotNull() {
            addCriterion("FUNC_PARENT is not null");
            return (Criteria) this;
        }

        public Criteria andFuncParentEqualTo(Integer value) {
            addCriterion("FUNC_PARENT =", value, "funcParent");
            return (Criteria) this;
        }

        public Criteria andFuncParentNotEqualTo(Integer value) {
            addCriterion("FUNC_PARENT <>", value, "funcParent");
            return (Criteria) this;
        }

        public Criteria andFuncParentGreaterThan(Integer value) {
            addCriterion("FUNC_PARENT >", value, "funcParent");
            return (Criteria) this;
        }

        public Criteria andFuncParentGreaterThanOrEqualTo(Integer value) {
            addCriterion("FUNC_PARENT >=", value, "funcParent");
            return (Criteria) this;
        }

        public Criteria andFuncParentLessThan(Integer value) {
            addCriterion("FUNC_PARENT <", value, "funcParent");
            return (Criteria) this;
        }

        public Criteria andFuncParentLessThanOrEqualTo(Integer value) {
            addCriterion("FUNC_PARENT <=", value, "funcParent");
            return (Criteria) this;
        }

        public Criteria andFuncParentIn(List<Integer> values) {
            addCriterion("FUNC_PARENT in", values, "funcParent");
            return (Criteria) this;
        }

        public Criteria andFuncParentNotIn(List<Integer> values) {
            addCriterion("FUNC_PARENT not in", values, "funcParent");
            return (Criteria) this;
        }

        public Criteria andFuncParentBetween(Integer value1, Integer value2) {
            addCriterion("FUNC_PARENT between", value1, value2, "funcParent");
            return (Criteria) this;
        }

        public Criteria andFuncParentNotBetween(Integer value1, Integer value2) {
            addCriterion("FUNC_PARENT not between", value1, value2, "funcParent");
            return (Criteria) this;
        }

        public Criteria andFuncOrderIsNull() {
            addCriterion("FUNC_ORDER is null");
            return (Criteria) this;
        }

        public Criteria andFuncOrderIsNotNull() {
            addCriterion("FUNC_ORDER is not null");
            return (Criteria) this;
        }

        public Criteria andFuncOrderEqualTo(Integer value) {
            addCriterion("FUNC_ORDER =", value, "funcOrder");
            return (Criteria) this;
        }

        public Criteria andFuncOrderNotEqualTo(Integer value) {
            addCriterion("FUNC_ORDER <>", value, "funcOrder");
            return (Criteria) this;
        }

        public Criteria andFuncOrderGreaterThan(Integer value) {
            addCriterion("FUNC_ORDER >", value, "funcOrder");
            return (Criteria) this;
        }

        public Criteria andFuncOrderGreaterThanOrEqualTo(Integer value) {
            addCriterion("FUNC_ORDER >=", value, "funcOrder");
            return (Criteria) this;
        }

        public Criteria andFuncOrderLessThan(Integer value) {
            addCriterion("FUNC_ORDER <", value, "funcOrder");
            return (Criteria) this;
        }

        public Criteria andFuncOrderLessThanOrEqualTo(Integer value) {
            addCriterion("FUNC_ORDER <=", value, "funcOrder");
            return (Criteria) this;
        }

        public Criteria andFuncOrderIn(List<Integer> values) {
            addCriterion("FUNC_ORDER in", values, "funcOrder");
            return (Criteria) this;
        }

        public Criteria andFuncOrderNotIn(List<Integer> values) {
            addCriterion("FUNC_ORDER not in", values, "funcOrder");
            return (Criteria) this;
        }

        public Criteria andFuncOrderBetween(Integer value1, Integer value2) {
            addCriterion("FUNC_ORDER between", value1, value2, "funcOrder");
            return (Criteria) this;
        }

        public Criteria andFuncOrderNotBetween(Integer value1, Integer value2) {
            addCriterion("FUNC_ORDER not between", value1, value2, "funcOrder");
            return (Criteria) this;
        }

        public Criteria andRowVersionIsNull() {
            addCriterion("ROW_VERSION is null");
            return (Criteria) this;
        }

        public Criteria andRowVersionIsNotNull() {
            addCriterion("ROW_VERSION is not null");
            return (Criteria) this;
        }

        public Criteria andRowVersionEqualTo(Integer value) {
            addCriterion("ROW_VERSION =", value, "rowVersion");
            return (Criteria) this;
        }

        public Criteria andRowVersionNotEqualTo(Integer value) {
            addCriterion("ROW_VERSION <>", value, "rowVersion");
            return (Criteria) this;
        }

        public Criteria andRowVersionGreaterThan(Integer value) {
            addCriterion("ROW_VERSION >", value, "rowVersion");
            return (Criteria) this;
        }

        public Criteria andRowVersionGreaterThanOrEqualTo(Integer value) {
            addCriterion("ROW_VERSION >=", value, "rowVersion");
            return (Criteria) this;
        }

        public Criteria andRowVersionLessThan(Integer value) {
            addCriterion("ROW_VERSION <", value, "rowVersion");
            return (Criteria) this;
        }

        public Criteria andRowVersionLessThanOrEqualTo(Integer value) {
            addCriterion("ROW_VERSION <=", value, "rowVersion");
            return (Criteria) this;
        }

        public Criteria andRowVersionIn(List<Integer> values) {
            addCriterion("ROW_VERSION in", values, "rowVersion");
            return (Criteria) this;
        }

        public Criteria andRowVersionNotIn(List<Integer> values) {
            addCriterion("ROW_VERSION not in", values, "rowVersion");
            return (Criteria) this;
        }

        public Criteria andRowVersionBetween(Integer value1, Integer value2) {
            addCriterion("ROW_VERSION between", value1, value2, "rowVersion");
            return (Criteria) this;
        }

        public Criteria andRowVersionNotBetween(Integer value1, Integer value2) {
            addCriterion("ROW_VERSION not between", value1, value2, "rowVersion");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_system_privilege
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_system_privilege
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}